apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: install-plan-upgrade-pr
spec:
  workspaces:
    - name: source
      description: The git repo
    - name: basic-auth
  params:
    - name: repo_url
      description: Git repository url
      type: string
      default: https://github.com/vikaspogu/openshift-multicluster.git
    - name: revision
      description: Git repository revision
      type: string
      default: main
    - name: csvName
      description: cluster service version name
      type: string
    - name: approval
      description: approval type (manual or auto)
      type: string
    - name: approved
      description: approval status (true or false)
      type: string
  tasks:
    - name: search-and-replace
      taskRef:
        resolver: cluster
        params:
          - name: name
            value: git-cli-custom
          - name: namespace
            value: openshift-pipelines
          - name: kind
            value: task
      workspaces:
        - name: source
          workspace: source
        - name: basic-auth
          workspace: basic-auth
      params:
        - name: GIT_USER_EMAIL
          value: vikaspogu@example.com
        - name: GIT_USER_NAME
          value: "Vikas Pogu"
        - name: GIT_SCRIPT
          value: |
            git init
            git remote add origin $(params.repo_url)
            git pull origin $(params.revision)
            git checkout -b feat/$(params.csvName)  # checkout the desired branch or commit
            if [ $(params.approval) == "Manual" ] && [ $(params.approved) == "false" ]; then
              echo "Replacing String"
              SEARCH_STRING=$(cut -d'.' -f1 <<< $(params.csvName))
              find . -type f -name "*.yaml" -exec sed -i '' 's/csv="$SEARCH_STRING.*"/csv="$(params.csvName)"/g' {} +
            else
              echo "Nothing to do."
              exit 0
            fi
            git status
            git commit -am "operator upgrade feat/$(params.csvName)"  # create a new commit with the specified message
            git push --set-upstream origin feat/"$(params.csvName)"  # push to the remote repository
    - name: open-pr
      when:
        - input: "$(tasks.search-and-replace.results.open_pr)"
          operator: in
          values: ["true"]
      taskRef:
        resolver: cluster
        params:
          - name: name
            value: github-open-pr
          - name: namespace
            value: openshift-pipelines
          - name: kind
            value: task
      runAfter:
        - search-and-replace
      params:
        - name: HEAD
          value: "feat/$(params.csvName)"
        - name: BASE
          value: "main"
        - name: AUTH_TYPE
          value: Basic
        - name: REPO_FULL_NAME
          value: vikaspogu/openshift-multicluster
        - name: TITLE
          value: "feat(operator)!: Update operator csv $(params.csvName)"
        - name: GITHUB_TOKEN_SECRET_NAME
          value: gitauth
        - name: BODY
          value: "feat(operator)!: Update operator csv $(params.csvName)"
